/**
 * 
 */
package com.chen.designpattern.abstractfactory;

/**
 * 抽象工厂模式： 
 * 多个抽象产品类，每个抽象产品类可以派生出多个具体产品类。
 *  一个抽象工厂类，可以派生出多个具体工厂类。每个具体工厂类可以创建多个具体产品类的实例。 
 *  
 *  区别： 工厂方法模式只有一个抽象产品类，而抽象工厂模式有多个。
 *       工厂方法模式的具体工厂类只能创建一个具体产品类的实例，而抽象工厂模式可以创建多个。 两者皆可。
 *       
 * 抽象工厂模式为创建一组对象提供了一种解决方案。与工厂方法模式相比，抽象工厂模式中的具体工厂不只是创建一种产品，它负责创建一族产品。
 * 抽象工厂模式定义如下：
 * 抽象工厂模式(Abstract Factory Pattern)：提供一个创建一系列相关或相互依赖对象的接口，而无须指定它们具体的类。
 * 抽象工厂模式又称为Kit模式，它是一种对象创建型模式。
 * 在抽象工厂模式中，每一个具体工厂都提供了多个工厂方法用于产生多种不同类型的产品，这些产品构成了一个产品族
 */
public interface Factory {

	public AbstractProductA makeProductA();
	
	public AbstractProductB makeProductB();
}
